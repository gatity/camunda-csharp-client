/*
 * Camunda BPM REST API
 *
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CamundaClient.Client;
using CamundaClient.Api;
// uncomment below to import models
//using CamundaClient.Model;

namespace CamundaClient.Test.Api
{
    /// <summary>
    ///  Class for testing TaskCommentApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TaskCommentApiTests : IDisposable
    {
        private TaskCommentApi instance;

        public TaskCommentApiTests()
        {
            instance = new TaskCommentApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TaskCommentApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TaskCommentApi
            //Assert.IsType<TaskCommentApi>(instance);
        }

        /// <summary>
        /// Test CreateComment
        /// </summary>
        [Fact]
        public void CreateCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //CommentDto commentDto = null;
            //var response = instance.CreateComment(id, commentDto);
            //Assert.IsType<CommentDto>(response);
        }

        /// <summary>
        /// Test GetComment
        /// </summary>
        [Fact]
        public void GetCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string commentId = null;
            //var response = instance.GetComment(id, commentId);
            //Assert.IsType<CommentDto>(response);
        }

        /// <summary>
        /// Test GetComments
        /// </summary>
        [Fact]
        public void GetCommentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetComments(id);
            //Assert.IsType<List<CommentDto>>(response);
        }
    }
}
