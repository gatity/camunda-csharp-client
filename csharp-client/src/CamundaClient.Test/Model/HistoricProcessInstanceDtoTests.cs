/*
 * Camunda BPM REST API
 *
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CamundaClient.Api;
using CamundaClient.Model;
using CamundaClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CamundaClient.Test.Model
{
    /// <summary>
    ///  Class for testing HistoricProcessInstanceDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HistoricProcessInstanceDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for HistoricProcessInstanceDto
        //private HistoricProcessInstanceDto instance;

        public HistoricProcessInstanceDtoTests()
        {
            // TODO uncomment below to create an instance of HistoricProcessInstanceDto
            //instance = new HistoricProcessInstanceDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HistoricProcessInstanceDto
        /// </summary>
        [Fact]
        public void HistoricProcessInstanceDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" HistoricProcessInstanceDto
            //Assert.IsType<HistoricProcessInstanceDto>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'RootProcessInstanceId'
        /// </summary>
        [Fact]
        public void RootProcessInstanceIdTest()
        {
            // TODO unit test for the property 'RootProcessInstanceId'
        }
        /// <summary>
        /// Test the property 'SuperProcessInstanceId'
        /// </summary>
        [Fact]
        public void SuperProcessInstanceIdTest()
        {
            // TODO unit test for the property 'SuperProcessInstanceId'
        }
        /// <summary>
        /// Test the property 'SuperCaseInstanceId'
        /// </summary>
        [Fact]
        public void SuperCaseInstanceIdTest()
        {
            // TODO unit test for the property 'SuperCaseInstanceId'
        }
        /// <summary>
        /// Test the property 'CaseInstanceId'
        /// </summary>
        [Fact]
        public void CaseInstanceIdTest()
        {
            // TODO unit test for the property 'CaseInstanceId'
        }
        /// <summary>
        /// Test the property 'ProcessDefinitionName'
        /// </summary>
        [Fact]
        public void ProcessDefinitionNameTest()
        {
            // TODO unit test for the property 'ProcessDefinitionName'
        }
        /// <summary>
        /// Test the property 'ProcessDefinitionKey'
        /// </summary>
        [Fact]
        public void ProcessDefinitionKeyTest()
        {
            // TODO unit test for the property 'ProcessDefinitionKey'
        }
        /// <summary>
        /// Test the property 'ProcessDefinitionVersion'
        /// </summary>
        [Fact]
        public void ProcessDefinitionVersionTest()
        {
            // TODO unit test for the property 'ProcessDefinitionVersion'
        }
        /// <summary>
        /// Test the property 'ProcessDefinitionId'
        /// </summary>
        [Fact]
        public void ProcessDefinitionIdTest()
        {
            // TODO unit test for the property 'ProcessDefinitionId'
        }
        /// <summary>
        /// Test the property 'BusinessKey'
        /// </summary>
        [Fact]
        public void BusinessKeyTest()
        {
            // TODO unit test for the property 'BusinessKey'
        }
        /// <summary>
        /// Test the property 'StartTime'
        /// </summary>
        [Fact]
        public void StartTimeTest()
        {
            // TODO unit test for the property 'StartTime'
        }
        /// <summary>
        /// Test the property 'EndTime'
        /// </summary>
        [Fact]
        public void EndTimeTest()
        {
            // TODO unit test for the property 'EndTime'
        }
        /// <summary>
        /// Test the property 'RemovalTime'
        /// </summary>
        [Fact]
        public void RemovalTimeTest()
        {
            // TODO unit test for the property 'RemovalTime'
        }
        /// <summary>
        /// Test the property 'DurationInMillis'
        /// </summary>
        [Fact]
        public void DurationInMillisTest()
        {
            // TODO unit test for the property 'DurationInMillis'
        }
        /// <summary>
        /// Test the property 'StartUserId'
        /// </summary>
        [Fact]
        public void StartUserIdTest()
        {
            // TODO unit test for the property 'StartUserId'
        }
        /// <summary>
        /// Test the property 'StartActivityId'
        /// </summary>
        [Fact]
        public void StartActivityIdTest()
        {
            // TODO unit test for the property 'StartActivityId'
        }
        /// <summary>
        /// Test the property 'DeleteReason'
        /// </summary>
        [Fact]
        public void DeleteReasonTest()
        {
            // TODO unit test for the property 'DeleteReason'
        }
        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }
        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

    }

}
