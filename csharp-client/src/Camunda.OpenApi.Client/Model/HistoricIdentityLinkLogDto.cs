/*
 * Camunda Platform REST API
 *
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.21.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Camunda.OpenApi.Client.Client.FileParameter;
using OpenAPIDateConverter = Camunda.OpenApi.Client.Client.OpenAPIDateConverter;

namespace Camunda.OpenApi.Client.Model
{
    /// <summary>
    /// HistoricIdentityLinkLogDto
    /// </summary>
    [DataContract(Name = "HistoricIdentityLinkLogDto")]
    public partial class HistoricIdentityLinkLogDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HistoricIdentityLinkLogDto" /> class.
        /// </summary>
        /// <param name="id">Id of the Historic identity link entry..</param>
        /// <param name="time">The time when the identity link is logged.  [Default format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;..</param>
        /// <param name="type">The type of identity link (candidate/assignee/owner)..</param>
        /// <param name="userId">The id of the user/assignee..</param>
        /// <param name="groupId">The id of the group..</param>
        /// <param name="taskId">The id of the task..</param>
        /// <param name="processDefinitionId">The id of the process definition..</param>
        /// <param name="processDefinitionKey">The key of the process definition..</param>
        /// <param name="operationType">Type of operation (add/delete)..</param>
        /// <param name="assignerId">The id of the assigner..</param>
        /// <param name="tenantId">The id of the tenant..</param>
        /// <param name="removalTime">The time after which the identity link should be removed by the History Cleanup job.  [Default format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;..</param>
        /// <param name="rootProcessInstanceId">The process instance id of the root process instance that initiated the process containing this identity link..</param>
        public HistoricIdentityLinkLogDto(string id = default(string), DateTime? time = default(DateTime?), string type = default(string), string userId = default(string), string groupId = default(string), string taskId = default(string), string processDefinitionId = default(string), string processDefinitionKey = default(string), string operationType = default(string), string assignerId = default(string), string tenantId = default(string), DateTime? removalTime = default(DateTime?), string rootProcessInstanceId = default(string))
        {
            this.Id = id;
            this.Time = time;
            this.Type = type;
            this.UserId = userId;
            this.GroupId = groupId;
            this.TaskId = taskId;
            this.ProcessDefinitionId = processDefinitionId;
            this.ProcessDefinitionKey = processDefinitionKey;
            this.OperationType = operationType;
            this.AssignerId = assignerId;
            this.TenantId = tenantId;
            this.RemovalTime = removalTime;
            this.RootProcessInstanceId = rootProcessInstanceId;
        }

        /// <summary>
        /// Id of the Historic identity link entry.
        /// </summary>
        /// <value>Id of the Historic identity link entry.</value>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The time when the identity link is logged.  [Default format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.
        /// </summary>
        /// <value>The time when the identity link is logged.  [Default format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.</value>
        [DataMember(Name = "time", EmitDefaultValue = true)]
        public DateTime? Time { get; set; }

        /// <summary>
        /// The type of identity link (candidate/assignee/owner).
        /// </summary>
        /// <value>The type of identity link (candidate/assignee/owner).</value>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// The id of the user/assignee.
        /// </summary>
        /// <value>The id of the user/assignee.</value>
        [DataMember(Name = "userId", EmitDefaultValue = true)]
        public string UserId { get; set; }

        /// <summary>
        /// The id of the group.
        /// </summary>
        /// <value>The id of the group.</value>
        [DataMember(Name = "groupId", EmitDefaultValue = true)]
        public string GroupId { get; set; }

        /// <summary>
        /// The id of the task.
        /// </summary>
        /// <value>The id of the task.</value>
        [DataMember(Name = "taskId", EmitDefaultValue = true)]
        public string TaskId { get; set; }

        /// <summary>
        /// The id of the process definition.
        /// </summary>
        /// <value>The id of the process definition.</value>
        [DataMember(Name = "processDefinitionId", EmitDefaultValue = true)]
        public string ProcessDefinitionId { get; set; }

        /// <summary>
        /// The key of the process definition.
        /// </summary>
        /// <value>The key of the process definition.</value>
        [DataMember(Name = "processDefinitionKey", EmitDefaultValue = true)]
        public string ProcessDefinitionKey { get; set; }

        /// <summary>
        /// Type of operation (add/delete).
        /// </summary>
        /// <value>Type of operation (add/delete).</value>
        [DataMember(Name = "operationType", EmitDefaultValue = true)]
        public string OperationType { get; set; }

        /// <summary>
        /// The id of the assigner.
        /// </summary>
        /// <value>The id of the assigner.</value>
        [DataMember(Name = "assignerId", EmitDefaultValue = true)]
        public string AssignerId { get; set; }

        /// <summary>
        /// The id of the tenant.
        /// </summary>
        /// <value>The id of the tenant.</value>
        [DataMember(Name = "tenantId", EmitDefaultValue = true)]
        public string TenantId { get; set; }

        /// <summary>
        /// The time after which the identity link should be removed by the History Cleanup job.  [Default format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.
        /// </summary>
        /// <value>The time after which the identity link should be removed by the History Cleanup job.  [Default format](https://docs.camunda.org/manual/7.21/reference/rest/overview/date-format/) &#x60;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZ&#x60;.</value>
        [DataMember(Name = "removalTime", EmitDefaultValue = true)]
        public DateTime? RemovalTime { get; set; }

        /// <summary>
        /// The process instance id of the root process instance that initiated the process containing this identity link.
        /// </summary>
        /// <value>The process instance id of the root process instance that initiated the process containing this identity link.</value>
        [DataMember(Name = "rootProcessInstanceId", EmitDefaultValue = true)]
        public string RootProcessInstanceId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class HistoricIdentityLinkLogDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("  TaskId: ").Append(TaskId).Append("\n");
            sb.Append("  ProcessDefinitionId: ").Append(ProcessDefinitionId).Append("\n");
            sb.Append("  ProcessDefinitionKey: ").Append(ProcessDefinitionKey).Append("\n");
            sb.Append("  OperationType: ").Append(OperationType).Append("\n");
            sb.Append("  AssignerId: ").Append(AssignerId).Append("\n");
            sb.Append("  TenantId: ").Append(TenantId).Append("\n");
            sb.Append("  RemovalTime: ").Append(RemovalTime).Append("\n");
            sb.Append("  RootProcessInstanceId: ").Append(RootProcessInstanceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
