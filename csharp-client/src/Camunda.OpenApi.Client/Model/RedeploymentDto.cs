/*
 * Camunda Platform REST API
 *
 * OpenApi Spec for Camunda Platform REST API.
 *
 * The version of the OpenAPI document: 7.21.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Camunda.OpenApi.Client.Client.FileParameter;
using OpenAPIDateConverter = Camunda.OpenApi.Client.Client.OpenAPIDateConverter;

namespace Camunda.OpenApi.Client.Model
{
    /// <summary>
    /// A JSON object with the following properties:
    /// </summary>
    [DataContract(Name = "RedeploymentDto")]
    public partial class RedeploymentDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RedeploymentDto" /> class.
        /// </summary>
        /// <param name="resourceIds">A list of deployment resource ids to re-deploy..</param>
        /// <param name="resourceNames">A list of deployment resource names to re-deploy..</param>
        /// <param name="source">Sets the source of the deployment..</param>
        public RedeploymentDto(List<string> resourceIds = default(List<string>), List<string> resourceNames = default(List<string>), string source = default(string))
        {
            this.ResourceIds = resourceIds;
            this.ResourceNames = resourceNames;
            this.Source = source;
        }

        /// <summary>
        /// A list of deployment resource ids to re-deploy.
        /// </summary>
        /// <value>A list of deployment resource ids to re-deploy.</value>
        [DataMember(Name = "resourceIds", EmitDefaultValue = true)]
        public List<string> ResourceIds { get; set; }

        /// <summary>
        /// A list of deployment resource names to re-deploy.
        /// </summary>
        /// <value>A list of deployment resource names to re-deploy.</value>
        [DataMember(Name = "resourceNames", EmitDefaultValue = true)]
        public List<string> ResourceNames { get; set; }

        /// <summary>
        /// Sets the source of the deployment.
        /// </summary>
        /// <value>Sets the source of the deployment.</value>
        [DataMember(Name = "source", EmitDefaultValue = true)]
        public string Source { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RedeploymentDto {\n");
            sb.Append("  ResourceIds: ").Append(ResourceIds).Append("\n");
            sb.Append("  ResourceNames: ").Append(ResourceNames).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
